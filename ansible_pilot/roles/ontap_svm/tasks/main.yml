---
##############################################################
### Run Pre-steps
##############################################################

- name: Validate Mandatory Input
  fail:
    msg:
      - "You must pass the 'ontap_svm_name'"
      - "or pass the '__ontap_svm_input__' variable"
      - "ontap_ip_interface_name is an optional input"
  when:
    - (ontap_svm_name is undefined and
       __ontap_svm_input__.name is undefined)
  tags:
    - always

- name: Validate Action
  fail:
    msg:
      - "You must pass the 'ontap_ansiblerole_action' variable"
  when:
    - ontap_ansiblerole_action is undefined
  tags:
    - always

- name: Set Connection Details
  ansible.builtin.set_fact:
    ontap_login: &ontap_login
      hostname:                   "{{ ontap_hostname }}"
      username:                   "{{ ontap_username }}"
      password:                   "{{ ontap_password }}"
      https:                      true
      validate_certs:             false
      use_rest:                   Never
  no_log: true
  tags:
    - always

- name: Source Inventory Information
  block:
    - name: Find SVM
      ansible.builtin.set_fact:
        ontap_svm_object: "{{ item | combine(item, recursive=True) }}"
      loop:
        "{{ svms | list }}"
      loop_control:
        label: "{{ item.name }}"
      when:
        - item.name == ontap_svm_name
  when:
    - source_inventory is defined
    - source_inventory == true
# FIXME - Additional condition required, to check if SVM has been found in inventory

- name: Source Template Information
  block:
    - name: Merge Defaults/Vars with Input
      ansible.builtin.set_fact:
        ontap_svm_object: "{{ ontap_svm_object | combine(__ontap_svm_input__, recursive=True) }}"
  when:
    - __ontap_svm_input__ is defined



##############################################################
### Initiate Action
##############################################################

- name: Read SVM Information into 'ontap_volume_object'
  include_tasks:      ontap_svm_info.yml
  vars:
    ontap_login:
      <<: *ontap_login
  when:
    - ontap_ansiblerole_action == "info"

- name: Create SVM
  include_tasks:      ontap_svm_create.yml
  vars:
    ontap_login:
      <<: *ontap_login
  when:
    - ontap_ansiblerole_action == "create"

- name: Delete SVM
  include_tasks:      ontap_svm_delete.yml
  vars:
    ontap_login:
      <<: *ontap_login
  when:
    - ontap_ansiblerole_action == "delete"