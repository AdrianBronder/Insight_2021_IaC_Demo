---
# tasks file for ontap_svm

- name: Set Connection Details
  ansible.builtin.set_fact:
    ontap_login: &ontap_login
      hostname:                   "{{ ontap_hostname }}"
      username:                   "{{ ontap_username }}"
      password:                   "{{ ontap_password }}"
      https:                      true
      validate_certs:             false
      use_rest:                   Never
  tags:
    - always
- name: Merge template with extraVars
  set_fact:
    svms: "{{ svms | combine(svm, recursive=True) }}"
- name: Create SVM
  na_ontap_svm:
    state:                        present
    name:                         "{{ svms['svm_template'].name }}"
    language:                     "{{ svms['svm_template'].language }}"
    comment:                      "{{ svms['svm_template'].comment }}"
    ipspace:                      "{{ svms['svm_template'].ipspace.name }}"
    snapshot_policy:              "{{ svms['svm_template'].snapshot_policy.name }}"
    <<: *ontap_login
  tags:
    - create_ontap_svm
    - modify_ontap_svm

- name: Create LIFs
  na_ontap_interface:
    state:                        present
    interface_name:               "{{ svms['svm_template'].lifs[item].name }}"
    vserver:                      "{{ svms['svm_template'].lifs[item].svm.name }}"
    address:                      "{{ svms['svm_template'].lifs[item].ip.address }}"
    netmask:                      "{{ svms['svm_template'].lifs[item].ip.netmask }}"
    protocols:                    "{{ svms['svm_template'].lifs[item].protocols }}"
    home_node:                    "{{ svms['svm_template'].lifs[item].location.home_node.name }}"
    home_port:                    "{{ svms['svm_template'].lifs[item].location.home_port.name }}"
# FIXME - This one is ugly, but "role" must be provided as long as we have to use ZAPI here
    role:                         "data"
    <<: *ontap_login
  loop:
    "{{ svms['svm_template'].lifs | list }}"
  tags:
    - create_ontap_svm
  when: svms['svm_template'].lifs[item].name!=""

- name: Configure DNS
  na_ontap_dns:
    state:                        present
    vserver:                      "{{ svms['svm_template'].name }}"
    domains:                      "{{ svms['svm_template'].dns.domains }}"
    nameservers:                  "{{ svms['svm_template'].dns.servers }}"
    <<: *ontap_login
  tags:
    - create_ontap_svm
    - modify_ontap_svm
  when: (svms['svm_template'].dns.domains[0]!="") and (svms['svm_template'].dns.servers[0]!="")

- name: Delete SVM
  na_ontap_svm:
    state:                        absent
    name:                         "{{ svms['svm_template'].name }}"
    <<: *ontap_login
  tags:
    - delete_ontap_svm
