---
# tasks file for ontap_ip_interface
- name: Prevent run without __action__ variable
  fail:
    msg:
      - "You must run this role [ontap_ip_interface] with an __action__ variable"
      - "Valid values are 'create' or 'delete'"
  when: __action__ is undefined or (__action__ != "create" and __action__ != "delete")

- name: Check valid input
  fail:
    msg:
      - "You must pass the 'ontap_ip_interface_name'"
      - "or pass the '__input__' variable"
  when: ontap_ip_interface_name is undefined and __input__ is undefined

- name: Check valid input
  fail:
    msg:
      - "You must pass the 'ontap_svm_name'"
  when: ontap_svm_name is undefined

- name: Set Connection Details
  ansible.builtin.set_fact:
    ontap_login: &ontap_login
      hostname:                   "{{ ontap_hostname }}"
      username:                   "{{ ontap_username }}"
      password:                   "{{ ontap_password }}"
      https:                      true
      validate_certs:             false
      use_rest:                   Never
  no_log: true

- name: Source Inventory Information
  block:
    # - name: Print all Lifs
    #   ansible.builtin.debug:
    #     var: svms
    #     verbosity: 4
    # - name: Searching Lif
    #   ansible.builtin.debug:
    #     msg: "{{ ontap_svm_name }} / {{ontap_ip_interface_name}}"
    #     verbosity: 2
    - name: Find SVM
      ansible.builtin.set_fact:
        ontap_svm_obj: "{{ item }}"
      loop:
        "{{ svms | list }}"
      when:
        - item.name == ontap_svm_name
    - name: Find IP Interface
      ansible.builtin.set_fact:
        ontap_ip_interface_obj: "{{ item }}"
      loop:
        "{{ ontap_svm_obj.ip_interfaces | list}}"
      when:
        - item.name == ontap_ip_interface_name
    # - name: Print found lif
    #   ansible.builtin.debug:
    #     var: ontap_ip_interface_obj
    #     verbosity: 4

  when: __input__ is undefined

- name: Template Information
  block:
    # - name: Print passed input
    #   ansible.builtin.debug:
    #     var: __input__
    #     verbosity: 4
    # - name: Print template
    #   ansible.builtin.debug:
    #     var: ontap_ip_interface_obj
    #     verbosity: 4
    - name: Merge Lif input with template
      ansible.builtin.set_fact:
        ontap_ip_interface_obj: "{{ ontap_ip_interface_obj | combine(__input__, recursive=True) }}"
    # - name: Print merged lif
    #   ansible.builtin.debug:
    #     var: ontap_ip_interface_obj
    #     verbosity: 4
  when: __input__ is defined

- name: Create Lif
  block:
  - name: Create LIF
    na_ontap_interface:
      state:                        present
      interface_name:               "{{ ontap_ip_interface_obj.name }}"
      vserver:                      "{{ ontap_svm_name }}"
      address:                      "{{ ontap_ip_interface_obj.ip.address }}"
      netmask:                      "{{ ontap_ip_interface_obj.ip.netmask }}"
      service_policy:               "{{ ontap_ip_interface_obj.service_policy.name }}"
      home_node:                    "{{ ontap_ip_interface_obj.location.home_node.name }}"
      home_port:                    "{{ ontap_ip_interface_obj.location.home_port.name }}"
  # FIXME - This one is ugly, but "role" must be provided as long as we have to use ZAPI here
      role:                         "data"
      <<: *ontap_login
    when: ontap_ip_interface_obj.name!=""
  when: __action__ == "create" # end create block

- name: Delete lif
  na_ontap_svm:
    state:                        absent
    name:                         "{{ ontap_ip_interface_obj.name }}"
    <<: *ontap_login
  when: __action__ == "delete"
