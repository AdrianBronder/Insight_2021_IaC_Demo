---
################################################################################
# Description:
# -----------
# - Creating an entire SVM with all child items (ip_interfaces, volumes,
#   qtrees, quotas...)
# - Taking full '__ontap_svm_input__' (including childs)
#   or sourcing SVM state from the inventory by taking 'ontap_svm_name' and
#   'source_inventory=true'
################################################################################
- hosts:                          "{{ ontap_cluster_name }}"
  gather_facts: false
  vars:
    ontap_ansiblerole_action:     "create"
  
  tasks:
  - name: Create SVMs
    include_role:
      name:                       ../roles/ontap_svm
    vars:
      __ontap_ansiblerole_action__:
                                  "{{ ontap_ansiblerole_action }}"
      __source_inventory__:       "{{ source_inventory }}"

  - name: Get list of IP Interfaces to be created
    ansible.builtin.set_fact:
      task_lif_list:              "{{ ontap_svm_object.ip_interfaces }}"
    when:
      - not (ontap_svm_object.ip_interfaces | default('') == "")

  - name: Create SVM IP Interfaces
    include_role:
      name:                       ../roles/ontap_ip_interface
    vars:
      __ontap_ip_interface_input__:
                                  "{{ task_lif_item }}"
      __ontap_ansiblerole_action__:
                                  "{{ ontap_ansiblerole_action }}"
      __source_inventory__:       false
    loop:
      "{{ task_lif_list | list }}"
    loop_control:
      label:    "{{ task_lif_item.name }}"
      loop_var: task_lif_item
    when:
      - not (task_lif_list | default('') == "")

  - name: Get list of Volumes to be created
    ansible.builtin.set_fact:
      task_vol_list:              "{{ ontap_svm_object.volumes }}"
    when:
      - not (ontap_svm_object.volumes | default('') == "")

  - name: Create SVM Volumes
    include_role:
      name:                       ../roles/ontap_volume
    vars:
      __ontap_volume_input__:     "{{ task_vol_item }}"
      __ontap_ansiblerole_action__:
                                  "{{ ontap_ansiblerole_action }}"
      __source_inventory__:       false
    loop:
      "{{ task_vol_list | list }}"
    loop_control:
      label:    "{{ task_vol_item.name }}"
      loop_var: task_vol_item
    when:
      - not (task_vol_item.name | default('') == "")

  - name: Get Qtrees to be created
    ansible.builtin.set_fact:
      task_qt_list:               "{{ task_qt_list |
                                      default ([]) + task_qt_item.qtrees
                                      }}"
    loop:
      "{{ ontap_svm_object.volumes }}"
    loop_control:
      label:    "Getting Qtrees in Volume: {{ task_qt_item.name }}"
      loop_var: task_qt_item
    when:
      - not (task_qt_item.qtrees | default('') == "")

  - name: Create SVM Qtrees
    include_role:
      name:                       ../roles/ontap_qtree
    vars:
      __ontap_qtree_input__:      "{{ task_qt_item }}"
      __ontap_ansiblerole_action__:
                                  "{{ ontap_ansiblerole_action }}"
      __source_inventory__:       false
    loop:
      "{{ task_qt_list | list }}"
    loop_control:
      label:    "{{ task_qt_item.name }}"
      loop_var: task_qt_item
    when:
      - not (task_qt_list | default('') == "")

  - name: Get Quota Rules to be created
    ansible.builtin.set_fact:
      task_quota_rule_list:      "{{ ontap_svm_object.quota_policies[0].quota_rules }}"
    when:
      - not (ontap_svm_object.quota_policies[0].quota_rules | default('') == "")

  - name: Create SVM Quota Rules
    include_role:
      name:                       ../roles/ontap_quota_rule
    vars:
      __ontap_quota_rule_input__: "{{ task_quota_rule_item }}"
      __ontap_ansiblerole_action__:
                                  "{{ ontap_ansiblerole_action }}"
      __source_inventory__:       false
    loop:
      "{{ task_quota_rule_list | list }}"
    loop_control:
      label:    "{{ task_quota_rule_item }}"
      loop_var: task_quota_rule_item
    when:
      - not (task_quota_rule_list | default('') == "")