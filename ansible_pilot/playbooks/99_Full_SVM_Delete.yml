---
################################################################################
#
# Descrition:
# Taking full '__ontap_svm_input__' or sourcing SVM state from the inventory by
# taking 'ontap_svm_name' and 'source_inventory=true'
#
################################################################################
- hosts:        "{{ ontap_cluster_name }}"
  gather_facts: false
  vars:
    ontap_ansiblerole_action:    "create"
  
  tasks:
  - name: Create SVMs
    include_role:
      name:                      ../roles/ontap_svm

  - name: Get volumes to be created
    ansible.builtin.set_fact:
      task_vol_list:             "{{ item.volumes }}"
    loop:
      "{{ hostvars[ontap_cluster_name].svms | list }}"
    loop_control:
      label: "{{ item.name }}"
    when:
      - item.name == ontap_svm_name

  - name: Create SVM volumes
    include_role:
      name:                      ../roles/ontap_volume
    vars:
      __ontap_volume_input__:    "{{ item }}"
      ontap_volume_name:         "{{ item.name }}"
    loop:
      "{{ task_vol_list | list }}"
    loop_control:
      label: "{{ item.name }}"

  - name: Get Qtrees to be created
    ansible.builtin.set_fact:
      task_qt_list:              "{{ task_qt_list |
                                    default ([]) + item.1.qtrees
                                    }}"
    loop:
      "{{ q('subelements', hostvars[ontap_cluster_name].svms, 'volumes') }}"
    loop_control:
      label: "{{ item.0.name }}:{{ item.1.name }}"
    when:
      - item.0.name == ontap_svm_name

  - name: Create SVM qtrees from Inventory
    include_role:
      name:                      ../roles/ontap_qtree
    vars:
      __ontap_qtree_input__:    "{{ item }}"
      ontap_volume_name:        "{{ item.volume.name }}"
      ontap_qtree_name:         "{{ item.name }}"
    loop:
      "{{ task_qt_list | list }}"
    loop_control:
      label: "{{ item.name }}"

  - name: Get quotas to be created
    ansible.builtin.set_fact:
      task_quota_list:          "{{ item.quota_policies[0].quota_rules }}"
    loop:
      "{{ hostvars[ontap_cluster_name].svms | list }}"
    loop_control:
      label: "{{ item.name }}"
    when:
      - item.name == ontap_svm_name

  - name: Create SVM quotas
    include_role:
      name:                      ../roles/ontap_quota_rule
    vars:
      __ontap_quota_rule_input__:    "{{ item }}"
      ontap_volume_name:             "{{ item.volume.name }}"
      ontap_quota_rule_type:         "{{ item.type }}"
      ontap_quota_rule_qtree:        "{{ item.qtree.name }}"
      ontap_quota_rule_users:        "{{ item.users }}"
      ontap_quota_rule_group:        "{{ item.group.name }}"
    loop:
      "{{ task_quota_list | list }}"
    loop_control:
      label: "{{ item }}"